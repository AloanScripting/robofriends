{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/Searchbox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","Cardlist","robots","cardArray","map","user","i","components_Card","key","Searchbox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onSearchChange","event","searchfield","target","value","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_Searchbox","components_Scroll","components_ErrorBoundary","components_Cardlist","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_containers_App"],"mappings":"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","file":"static/js/main.b427f4ad.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n    return (\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt=\"Janey\" src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from './Card';\r\n\r\n\r\nconst Cardlist = ({ robots }) => {\r\n\r\n    const cardArray = robots.map((user, i) =>{\r\n        return (\r\n        <Card key={i} \r\n        id={robots[i].id} \r\n        name={robots[i].name} \r\n        email={robots[i].email}/>\r\n\r\n    );\r\n})\r\n    return (\r\n        <div>\r\n            {cardArray}\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Cardlist;","import React from \"react\";\r\n\r\nconst Searchbox = ({ searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search' \r\n                placeholder='search robots' \r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Searchbox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY:'scroll',border:'1 px solid black',height:'750px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error,info) {\r\n        this.setState( { hasError: true })\r\n    }\r\n    render() {\r\n        if (this.state.hasError){\r\n            return <h1>Oops, something has gone wrong, try refreshing!</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from \"react\";\r\nimport Cardlist from '../components/Cardlist'\r\nimport Searchbox from '../components/Searchbox'\r\nimport './App.css'\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            robots: [],\r\n            searchfield:''    \r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ robots: users }));\r\n        }\r\n    onSearchChange = (event) =>{\r\n        this.setState({searchfield: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        return !robots.length ?\r\n            <h1>Loading</h1> :\r\n        (\r\n            <div className='tc'>\r\n                <h1 className='f2'>Robofriends</h1>\r\n                <Searchbox searchChange={this.onSearchChange} />\r\n                <Scroll>\r\n                    <ErrorBoundary>\r\n                    <Cardlist robots={filteredRobots} />\r\n                    </ErrorBoundary>\r\n                </Scroll>\r\n                \r\n            </div>\r\n            \r\n            );\r\n        }\r\n    }\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './containers/App'\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n// import { hydrateRoot } from 'react-dom/client';\r\n\r\n\r\nReactDOM.createRoot(document.getElementById('root')).render(<App />);\r\n// The above was from ZTM. below is how I fixed it initially\r\n// const container = document.getElementById(\"root\");\r\n// const root = ReactDOM.createRoot(container);\r\n// root.render (\r\n//     <App />\r\n// );\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}